{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuyafujii/project/chatbot/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport { db } from './firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState([\"init\"]);\n  const [dataset, setDataset] = useState([]);\n  const [open, setOpen] = useState(false);\n};\n\n_s(App, \"E8TrSKKYEERoZqz7GySXdxw5+/E=\");\n\n_c = App;\n\nconst displayNextQuestion = (nextQuestionId, nextDataset) => {\n  addChats({\n    text: this.state.dataset[nextQuestionId].question,\n    type: 'question'\n  });\n  setAnswers(nextDataset.answers);\n  setCurrentId(nextQuestionId);\n  this.setState({\n    answers: this.state.dataset[nextQuestionId].answers,\n    chats: chats,\n    currentId: nextQuestionId\n  });\n};\n\nconst selectAnswer = (selectedAnswer, nextQuestionId) => {\n  switch (true) {\n    case /^https:*/.test(nextQuestionId):\n      const a = document.createElement('a');\n      a.href = nextQuestionId;\n      a.target = '_blank';\n      a.click();\n      break;\n\n    case nextQuestionId === 'contact':\n      handleClickOpen();\n      break;\n\n    default:\n      addChats({\n        text: selectedAnswer,\n        type: 'answer'\n      });\n      setState({\n        chats: chats\n      });\n      setTimeout(() => this.displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 500);\n      break;\n  }\n};\n\nconst addChats = chat => {\n  _s2();\n\n  setChats(prevChats => {\n    return [...prevChats, chats];\n  });\n  useEffect(() => {\n    const scrollArea = document.getElementById('scroll-area');\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  });\n  useEffect(() => {\n    (async () => {\n      const initDataset = {};\n      await db.collection(\"questions\").get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.id;\n          const data = doc.data();\n          initDataset[id] = data;\n        });\n      });\n      setDataset(initDataset);\n      displayNextQuestion(currendId, initDataset[currendId]);\n    })();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"c-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-box\",\n      children: [/*#__PURE__*/_jsxDEV(Chats, {\n        chats: chats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AnswersList, {\n        answers: answers,\n        select: selectAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n        open: open,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(addChats, \"WR3Gjiml9sdXest9LQISSPwVyDg=\");\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tatsuyafujii/project/chatbot/src/App.jsx"],"names":["React","useCallback","useState","useEffect","AnswersList","Chats","FormDialog","db","App","answers","setAnswers","chats","setChats","currentId","setCurrentId","dataset","setDataset","open","setOpen","displayNextQuestion","nextQuestionId","nextDataset","addChats","text","state","question","type","setState","selectAnswer","selectedAnswer","test","a","document","createElement","href","target","click","handleClickOpen","setTimeout","chat","prevChats","scrollArea","getElementById","scrollTop","scrollHeight","initDataset","collection","get","then","snapshots","forEach","doc","id","data","currendId","handleClose"],"mappings":"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","sourcesContent":["import React, {useCallback, useState, useEffect} from 'react';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from \"./components\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport {db} from './firebase/index'\n\nconst App = () => {\n    const [answers, setAnswers] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [currentId, setCurrentId] = useState([\"init\"]);\n    const [dataset, setDataset] = useState([]);\n    const [open, setOpen] = useState(false);\n\n    }\n\n    const displayNextQuestion = (nextQuestionId, nextDataset) => {\n        addChats({\n            text:this.state.dataset[nextQuestionId].question,\n            type: 'question'\n        })\n\n        setAnswers(nextDataset.answers)\n        setCurrentId(nextQuestionId)\n\n        this.setState({\n            answers: this.state.dataset[nextQuestionId].answers,\n            chats: chats,\n            currentId:nextQuestionId\n        })\n    }\n\n    const selectAnswer = (selectedAnswer, nextQuestionId) => {\n        switch (true){\n\n            case (/^https:*/.test(nextQuestionId)):\n                const a = document.createElement('a');\n                a.href = nextQuestionId;\n                a.target = '_blank';\n                a.click();\n                break;\n\n            case (nextQuestionId === 'contact'):\n                handleClickOpen();\n                break;\n\n            default:\n                addChats({\n                    text: selectedAnswer,\n                    type: 'answer'\n                })\n\n                setState({\n                    chats:chats\n                })\n\n                setTimeout(() => this.displayNextQuestion(nextQuestionId,dataset[nextQuestionId]), 500);\n                break;\n        }\n    }\n\n    const addChats = (chat) => {\n    setChats(prevChats => {\n        return [...prevChats, chats]\n    })\n\n    useEffect(() => {\n        const scrollArea = document.getElementById('scroll-area');\n        if (scrollArea){\n            scrollArea.scrollTop = scrollArea.scrollHeight;\n        }\n    })\n\n    useEffect( () => {\n        (async () => {\n            const initDataset = {};\n\n            await db.collection(\"questions\").get().then(snapshots => {\n                snapshots.forEach(doc => {\n                    const id = doc.id\n                    const data = doc.data()\n                    initDataset[id] = data\n                })\n            })\n\n            setDataset(initDataset)\n            displayNextQuestion(currendId, initDataset[currendId])\n        })()\n    },[])\n\n    const handleClickOpen = () => {\n        setOpen(true)\n    };\n\n    const handleClose =  useCallback(() =>  {\n        setOpen(false)\n    },[setOpen]);\n\n        return (\n            <section className={\"c-section\"}>\n                <div className={\"c-box\"}>\n                    <Chats chats={chats}/>\n                    <AnswersList answers={answers} select={selectAnswer}/>\n                    <FormDialog open={open} handleClose={handleClose}/>\n                </div>\n            </section>\n        );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}