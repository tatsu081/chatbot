{"ast":null,"code":"var _jsxFileName = \"/Users/tatsuyafujii/project/chatbot/src/App.jsx\";\nimport React from 'react';\nimport './assets/styles/style.css';\nimport defaultDataset from \"./dataset.json\";\nimport { AnswersList, Chats } from \"./components\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport { db } from './firebase/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayNextQuestion = nextQuestionId => {\n      const chats = this.state.chats;\n      chats.push({\n        text: this.state.dataset[nextQuestionId].question,\n        type: 'question'\n      });\n      this.setState({\n        answers: this.state.dataset[nextQuestionId].answers,\n        chats: chats,\n        currentId: nextQuestionId\n      });\n    };\n\n    this.selectAnswer = (selectedAnswer, nextQuestionId) => {\n      switch (true) {\n        case nextQuestionId === 'init':\n          this.displayNextQuestion(nextQuestionId);\n          break;\n\n        case /^https:*/.test(nextQuestionId):\n          const a = document.createElement('a');\n          a.href = nextQuestionId;\n          a.target = '_blank';\n          a.click();\n          break;\n\n        case nextQuestionId === 'contact':\n          this.handleClickOpen();\n          break;\n\n        default:\n          const chats = this.state.chats;\n          chats.push({\n            text: selectedAnswer,\n            type: 'answer'\n          });\n          this.setState({\n            chats: chats\n          });\n          setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n          break;\n      }\n    };\n\n    this.initDataset = dataset => {\n      this.setState({\n        dataset: dataset\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      answers: [],\n      //回答コンポーネントに表示するデータ\n      chats: [],\n      //チャットボットコンポーネントに表示するデータ\n      currentId: \"init\",\n      //現在の質問とID\n      dataset: {},\n      //質問と回答のデータセット\n      open: false //問い合わせフォーム用モーダルの開閉を管理\n\n    };\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const scrollArea = document.getElementById('scroll-area');\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  }\n\n  componentDidMount() {\n    (async () => {\n      const dataset = this.state.dataset;\n      await db.collection(\"questions\").get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.in;\n          const data = doc.data();\n          dataset[id] = data;\n        });\n      });\n      this.initDataset(dataset);\n      const initAnswer = \"\";\n      this.selectAnswer(initAnswer, this.state.currentId);\n    })();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"c-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-box\",\n        children: [/*#__PURE__*/_jsxDEV(Chats, {\n          chats: this.state.chats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AnswersList, {\n          answers: this.state.answers,\n          select: this.selectAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n          open: this.state.open,\n          handleClose: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tatsuyafujii/project/chatbot/src/App.jsx"],"names":["React","defaultDataset","AnswersList","Chats","FormDialog","db","App","Component","constructor","props","displayNextQuestion","nextQuestionId","chats","state","push","text","dataset","question","type","setState","answers","currentId","selectAnswer","selectedAnswer","test","a","document","createElement","href","target","click","handleClickOpen","setTimeout","initDataset","open","handleClose","bind","componentDidUpdate","prevProps","prevState","snapshot","scrollArea","getElementById","scrollTop","scrollHeight","componentDidMount","collection","get","then","snapshots","forEach","doc","id","in","data","initAnswer","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './assets/styles/style.css';\nimport defaultDataset from \"./dataset.json\";\nimport {AnswersList, Chats} from \"./components\";\nimport FormDialog from \"./components/Forms/FormDialog\";\nimport {db} from './firebase/index'\n\nclass App extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            answers: [],　　　       //回答コンポーネントに表示するデータ\n            chats: [],　　　　　　　　　//チャットボットコンポーネントに表示するデータ\n            currentId: \"init\",　　　　//現在の質問とID\n            dataset: {},　//質問と回答のデータセット\n            open: false　　　　　　　　 //問い合わせフォーム用モーダルの開閉を管理\n        }\n\n        this.selectAnswer = this.selectAnswer.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    displayNextQuestion = (nextQuestionId) => {\n        const chats =this.state.chats\n        chats.push({\n            text:this.state.dataset[nextQuestionId].question,\n            type: 'question',\n        })\n\n        this.setState({\n            answers: this.state.dataset[nextQuestionId].answers,\n            chats: chats,\n            currentId:nextQuestionId\n        })\n    }\n\n    selectAnswer = (selectedAnswer, nextQuestionId) => {\n        switch (true){\n            case (nextQuestionId === 'init'):\n                this.displayNextQuestion(nextQuestionId)\n                break;\n\n            case (/^https:*/.test(nextQuestionId)):\n                const a = document.createElement('a');\n                a.href = nextQuestionId;\n                a.target = '_blank';\n                a.click();\n                break;\n\n            case (nextQuestionId === 'contact'):\n                this.handleClickOpen();\n                break;\n\n            default:\n                const chats = this.state.chats;\n                chats.push ({\n                    text: selectedAnswer,\n                    type: 'answer'\n                })\n\n                this.setState({\n                    chats:chats\n                })\n\n                setTimeout(() => this.displayNextQuestion(nextQuestionId), 500);\n                break;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        const scrollArea = document.getElementById('scroll-area');\n        if (scrollArea){\n            scrollArea.scrollTop = scrollArea.scrollHeight;\n        }\n    }\n\n    initDataset = (dataset) => {\n        this.setState({dataset: dataset})\n    }\n\n    componentDidMount() {\n        (async () => {\n            const dataset = this.state.dataset\n\n            await db.collection(\"questions\").get().then(snapshots => {\n                snapshots.forEach(doc => {\n                    const id = doc.in\n                    const data = doc.data()\n                    dataset[id] = data\n                })\n            })\n\n            this.initDataset((dataset))\n            const initAnswer = \"\";\n            this.selectAnswer(initAnswer, this.state.currentId)\n        })()\n    }\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        return (\n            <section className={\"c-section\"}>\n                <div className={\"c-box\"}>\n                    <Chats chats={this.state.chats}/>\n                    <AnswersList answers={this.state.answers} select={this.selectAnswer}/>\n                    <FormDialog open={this.state.open} handleClose={this.handleClose}/>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}